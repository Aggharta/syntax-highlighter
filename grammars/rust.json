{
	"simpleTerms": {

        "type_identifier": "type",
        "primitive_type": "type",

        "attribute_item": "variable",
        "inner_attribute_item": "variable",
        "shorthand_field_identifier": "variable",

        "boolean_literal": "number",
        "integer_literal": "number",
        "float_literal": "number",
        "char_literal": "string",
        "string_literal": "string",
        "raw_string_literal": "string",
        "escape_sequence": "string",

        "line_comment": "comment",
        "block_comment": "comment",

        "let": "storage_modifier",
        "const": "storage_modifier",
        "static": "storage_modifier",
        "extern": "storage_modifier",
        "dyn": "storage_modifier",
        "trait": "storage_modifier",
        "mod": "storage_modifier",
        "pub": "storage_modifier",
        "crate": "storage_modifier",
        "default": "storage_modifier",
        "ref": "storage_modifier",
        "mutable_specifier": "storage_modifier",

        "fn": "keyword_control",
        "type": "keyword_control",
        "struct": "keyword_control",
        "enum": "keyword_control",
        "union": "keyword_control",
        "impl": "keyword_control",

        "unsafe": "keyword_control",
        "match": "keyword_control",
        "if": "keyword_control",
        "in": "keyword_control",
        "else": "keyword_control",
        "move": "keyword_control",
        "while": "keyword_control",
        "loop": "keyword_control",
        "for": "keyword_control",
        "return": "keyword_control",
        "continue": "keyword_control",
        "break": "keyword_control",
        "where": "keyword_control",
        "macro_rules!": "keyword_control",

		".": "keyword_operator",
		"->": "keyword_operator",
		"*": "keyword_operator",
		"-": "keyword_operator",
		"+": "keyword_operator",
		"/": "keyword_operator",
		"%": "keyword_operator",
		"++": "keyword_operator",
		"--": "keyword_operator",
		"==": "keyword_operator",
		"!": "keyword_operator",
        "!=": "keyword_operator",
        "<": "keyword_operator",
		">": "keyword_operator",
		">=": "keyword_operator",
		"<=": "keyword_operator",
		"&&": "keyword_operator",
		"||": "keyword_operator",
		"&": "keyword_operator",
		"|": "keyword_operator",
		"^": "keyword_operator",
		"~": "keyword_operator",
		"<<": "keyword_operator",
		">>": "keyword_operator",
		"=": "keyword_operator",
		"+=": "keyword_operator",
		"-=": "keyword_operator",
		"*=": "keyword_operator",
		"/=": "keyword_operator",
		"%=": "keyword_operator",
		"<<=": "keyword_operator",
		">>=": "keyword_operator",
		"&=": "keyword_operator",
		"^=": "keyword_operator",
		"|=": "keyword_operator",
		"?": "keyword_operator",
		"::": "keyword_operator",
        "as": "keyword_operator",

        "use": "keyword_directive",

        ";": "punctuation",
		":": "punctuation",
		",": "punctuation",
		"[": "punctuation",
		"]": "punctuation",
        "{": "punctuation",
        "}": "punctuation",
        "(": "punctuation",
		")": "punctuation",
	},

	"complexTerms": ["identifier", "field_identifier", "self", "super", "crate"],

	"complexScopes": {
        "use_wildcard > identifier[0]": "type",
        "scoped_type_identifier > identifier": "type",
        "scoped_type_identifier > scoped_identifier > identifier": "type",
        "scoped_identifier > identifier": "type",
        "scoped_identifier > scoped_identifier > identifier": "type",
        "use_declaration > identifier": "type",
        "use_declaration > scoped_identifier > identifier": "type",
        "use_list > identifier": "type",
        "use_list > scoped_identifier > identifier": "type",
        "meta_item > identifier": "type",
        "tuple_struct_pattern > identifier": "type",

		"identifier": "variable",
        "field_identifier": "variable",
        "self": "variable",
        "super": "variable",
        "scoped_identifier > identifier[-1]": "variable",

        "call_expression > identifier": "function",
        "call_expression > field_expression > field_identifier[-1]": "function",
        "call_expression > scoped_identifier > identifier[-1]": "function",
        "macro_invocation > identifier": "function",
        "macro_definition > identifier": "function",
        "generic_function > identifier": "function",
        "generic_function > field_expression > field_identifier": "function",
        "generic_function > scoped_identifier > identifier": "function",
        "function_item > identifier": "function",
        "function_signature_item > identifier": "function",

        "lifetime > identifier": "storage_modifier",

        "use_list > self": "keyword_operator",
        "scoped_use_list > self": "keyword_operator",
        "scoped_identifier > self": "keyword_operator",
        "use_list > crate": "keyword_operator",
        "scoped_use_list > crate": "keyword_operator",
        "scoped_identifier > crate": "keyword_operator",
        "use_list > super": "keyword_operator",
        "scoped_use_list > super": "keyword_operator",
        "scoped_identifier > super": "keyword_operator",

	},

}
