{
	"simpleTerms": {
		"type_identifier": "type",
		"primitive_type": "type",
		"unsigned": "type",
		"signed": "type",
		"short": "type",
		"long": "type",
        "auto": "type",

        "namespace_identifier": "scope",

		"extern": "modifier",
		"static": "modifier",
		"register": "modifier",
		"friend": "modifier",
		"inline": "modifier",
		"explicit": "modifier",
		"const": "modifier",
		"constexpr": "modifier",
		"volatile": "modifier",
		"restrict": "modifier",
		"_Atomic": "modifier",
		"public": "modifier",
		"private": "modifier",
		"protected": "modifier",
		"final": "modifier",
		"override": "modifier",
		"function_specifier": "modifier",

		"number_literal": "number",
		"char_literal": "string",
		"string_literal": "string",
		"system_lib_string": "string",
		"raw_string_literal": "string",
		"escape_sequence": "string",
		"comment": "comment",

		"null": "constant",
		"nullptr": "constant",
		"true": "constant",
		"false": "constant",

		"if": "control",
		"else": "control",
		"do": "control",
		"for": "control",
		"while": "control",
		"break": "control",
		"continue": "control",
		"return": "control",
		"switch": "control",
		"case": "control",
		"default": "control",
        "goto": "control",

		"struct": "control",
		"enum": "control",
		"union": "control",
		"typedef": "control",
		"class": "control",
		"using": "control",
		"namespace": "control",
		"template": "control",
		"typename": "control",
		"try": "control",
		"catch": "control",

		"sizeof": "operator",
		"new": "operator",
		"delete": "operator",
		".": "operator",
		"->": "operator",
		"*": "operator",
		"-": "operator",
		"+": "operator",
		"/": "operator",
		"%": "operator",
		"++": "operator",
		"--": "operator",
		"==": "operator",
		"!": "operator",
        "!=": "operator",
        "<": "operator",
		">": "operator",
		">=": "operator",
		"<=": "operator",
		"&&": "operator",
		"||": "operator",
		"&": "operator",
		"|": "operator",
		"^": "operator",
		"~": "operator",
		"<<": "operator",
		">>": "operator",
		"=": "operator",
		"+=": "operator",
		"-=": "operator",
		"*=": "operator",
		"/=": "operator",
		"%=": "operator",
		"<<=": "operator",
		">>=": "operator",
		"&=": "operator",
		"^=": "operator",
		"|=": "operator",
		"?": "operator",
		"::": "operator",

		"#if": "directive",
		"#ifdef": "directive",
		"#ifndef": "directive",
		"#elif": "directive",
		"#else": "directive",
		"#endif": "directive",
		"#define": "directive",
		"#include": "directive",
		"preproc_directive": "directive",

		";": "punctuation",
		":": "punctuation",
		",": "punctuation",
		"[": "punctuation",
		"]": "punctuation",
		"{": "punctuation",
		"}": "punctuation",
		"(": "punctuation",
		")": "punctuation"
	},

	"complexTerms": ["identifier", "field_identifier"],

	"complexScopes": {
		"identifier": "variable",
		"field_identifier": "variable",

		"call_expression > identifier": "function",
		"call_expression > field_expression > field_identifier": "function",
		"call_expression > scoped_identifier > identifier": "function",
		"template_function > identifier": "function",
		"template_function > scoped_identifier > identifier": "function",
		"template_method > field_identifier": "function",
		"function_declarator > identifier": "function",
		"function_declarator > field_identifier": "function",
		"function_declarator > scoped_identifier > identifier": "function",
		"destructor_name > identifier": "function",
	},

}
